{"version":3,"sources":["store.js","components/NewStopWatch.js","components/Timer.js","components/UpdateStopWatch.js","App.js","serviceWorker.js","index.js"],"names":["createStore","state","action","type","timers","map","t","id","payload","timerTime","Object","objectSpread","concat","toConsumableArray","filter","updateInfo","title","project","NewStopWatch","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeT","e","setState","target","value","onChangeP","createInfo","preventDefault","store","dispatch","nextUniqueId","onToggleAddTimer","uniqueId","enableUniqueIds","assertThisInitialized","react_default","a","createElement","placeholder","onChange","className","onClick","React","Component","Timer","timerOn","timerStart","timer","startTimer","bind","stopTimer","deleteStopWatch","updateStopWatch","millisecondsToHuman","ms","seconds","Math","floor","minutes","hours","pad","toString","join","numberString","size","padded","length","_this2","Date","now","setInterval","clearTimeout","UpdateStopWatch","values","cancelUpdate","App","isAddTimerActive","subscribe","getState","key","components_UpdateStopWatch","components_Timer","components_NewStopWatch","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e46a8759.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst reducer = (state, action) => {\n  if(action.type === 'SYNC_TIMER') {\n    state.timers.map((t) => {\n      if(t.id === action.payload.id){\n       t.timerTime = action.payload.timerTime\n      }\n      return t\n    })\n    return {\n      ...state\n    }\n\n  } else if(action.type === 'NEW_STOPWATCH') {\n    return {      \n      ...state,\n      timers: [\n        ...state.timers,\n        { ...action.payload }\n      ]\n    }\n\n  } else if(action.type === 'DELETE') {\n    return {\n      ...state,\n      timers: state.timers.filter(t => t.id !== action.payload.id)\n    }\n\n  }else if(action.type === 'TOGGLE_UPDATE') {\n    return {\n      ...state,\n      timers: state.timers.map(t => {\n        if(t.id === action.payload.id) {\n          t.timerTime = action.payload.timerTime\n          t.updateInfo = !t.updateInfo;\n        }\n        return t;\n      })\n    }\n  } else if(action.type === 'UPDATE_STOPWATCH') {\n    return {\n      ...state,\n      timers: state.timers.map(t => {\n        if(t.id === action.payload.id) {\n          t.title = action.payload.title;\n          t.project = action.payload.project;\n          t.updateInfo = !t.updateInfo;\n        }\n        return t;\n      })\n    }\n  } else if(action.type === 'CANCEL_UPDATE') {\n    return {\n      ...state,\n      timers: state.timers.map(t => {\n        if(t.id === action.payload.id) {\n          t.updateInfo = !t.updateInfo;\n        }\n        return t;\n      })\n    }\n  }\n\n  return state;\n\n}\n\nexport default createStore(reducer, { timers: [\n  {id: 0, title: 'Primer cron√≥metro', project: 'Makeitreal', timerTime: 475003, updateInfo: false }\n]});","import React from 'react';\nimport uniqueId from 'react-html-id';\nimport store from '../store';\n\n\nclass NewStopWatch extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      title: \"\",\n      project: \"\"\n    }\n\n    uniqueId.enableUniqueIds(this);\n\n  }\n\n  render() {\n    return (\n      <form>\n        <div>\n          <label>Title</label>\n          <input placeholder='Title' value={this.state.title} onChange={this.onChangeT}/>\n          <label>Proyecto</label>\n          <input placeholder='Proyecto' value={this.state.project} onChange={this.onChangeP}/>\n        </div>\n        <div className='buttons'>\n          <div className='button half blue' onClick={this.createInfo}>Create</div>\n          <div className='button half red' onClick={this.props.onToggleAddTimer}>Cancel</div>\n        </div>\n      </form>\n    )\n  }\n\n  onChangeT = (e) => {\n    this.setState({\n      title: e.target.value\n    })\n  }\n  \n  onChangeP = (e) => {\n    this.setState({\n      project: e.target.value\n    })\n  }\n\n  createInfo = (e) => {\n    e.preventDefault();\n\n    store.dispatch({\n      type:'NEW_STOPWATCH',\n      payload: {\n        id: this.nextUniqueId(),\n        title: this.state.title,\n        project: this.state.project,\n        timerTime: 0,\n        updateInfo: false\n      }\n    });\n\n    this.props.onToggleAddTimer();\n\n    this.setState({\n      title: '',\n      project: ''\n    });\n  }\n\n} \n\nexport default NewStopWatch;\n","import React from 'react';\nimport store from '../store';\n\nclass Timer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: props.timer.timerTime\n    }\n    \n    this.startTimer = this.startTimer.bind(this);\n    this.stopTimer = this.stopTimer.bind(this);\n    this.deleteStopWatch = this.deleteStopWatch.bind(this);\n    this.updateStopWatch = this.updateStopWatch.bind(this);\n  }\n  \n  render() {\n    return (\n      <div>\n        <h1 className='timer'>{this.millisecondsToHuman(this.state.timerTime)}</h1>\n        <div className='options'>\n          <span className='red' onClick={this.deleteStopWatch}>Delete</span>\n          <span className='yellow' onClick={this.updateStopWatch}>Update</span>\n        </div>\n        {this.state.timerOn === false ? \n        <div className='button green' onClick={this.startTimer}>\n          Start\n        </div> :\n        <div className='button red' onClick={this.stopTimer}>\n          Stop\n        </div>}\n      </div>\n    )\n  }\n\n  millisecondsToHuman(ms) {\n    const seconds = Math.floor((ms / 1000) % 60);\n    const minutes = Math.floor((ms / 1000 / 60) % 60);\n    const hours = Math.floor(ms / 1000 / 60 / 60);\n\n    const humanized = [\n      this.pad(hours.toString(), 2),\n      this.pad(minutes.toString(), 2),\n      this.pad(seconds.toString(), 2),\n    ].join(':');\n\n    return humanized;\n  }\n\n  pad(numberString, size) {\n    let padded = numberString;\n    while (padded.length < size) padded = `0${padded}`;\n    return padded;\n  }\n\n  startTimer(e) {\n    e.preventDefault();\n    this.setState({\n      timerOn: true,\n      timerTime: this.state.timerTime,\n      timerStart: Date.now() - this.state.timerTime\n    });\n    this.timer = setInterval(() => {\n      this.setState({\n        timerTime: Date.now() - this.state.timerStart\n      });\n    }, 1000);\n  };\n\n  stopTimer(e) {\n    e.preventDefault();\n    this.setState({\n      timerOn: false\n    });\n\n    clearTimeout(this.timer);\n\n    store.dispatch({\n      type:'SYNC_TIMER',\n      payload: {\n        ...this.props.timer,\n        timerTime: this.state.timerTime\n      }      \n    });    \n  }\n  \n  componentWillUnmount() {\n    clearTimeout(this.timer);\n  }\n\n  deleteStopWatch() {    \n    store.dispatch({\n      type:'DELETE',\n      payload: {\n        ...this.props.timer\n      }\n    })\n  }\n\n  updateStopWatch() {\n    store.dispatch({\n      type: 'TOGGLE_UPDATE',\n      payload: {\n        ...this.props.timer,\n        timerTime: this.state.timerTime,\n      }\n    })\n  }\n}\n\nexport default Timer;\n\n","import React from 'react';\nimport store from '../store'\n\nclass UpdateStopWatch extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: props.values.title,\n      project: props.values.project,\n      updateInfo: props.values.updateInfo\n    }\n  }\n\n  render() {  \n    return (\n      <form>\n        <div>\n          <label>Title</label>\n          <input placeholder='Title' value={this.state.title} onChange={this.onChangeT}/>\n          <label>Proyecto</label>\n          <input placeholder='Proyecto' value={this.state.project} onChange={this.onChangeP}/>\n        </div>\n        <div className='buttons'>\n          <div className='button half blue' onClick={this.updateInfo}>Update</div>\n          <div className='button half red' onClick={this.cancelUpdate}>Cancel</div>\n        </div>\n      </form>\n    );\n  };\n\n  onChangeT = (e) => {\n    this.setState({\n      title: e.target.value\n    });\n  };\n  \n  onChangeP = (e) => {\n    this.setState({\n      project: e.target.value\n    })\n  };\n  \n  updateInfo = (e) => {\n    e.preventDefault();\n    store.dispatch({\n      type:'UPDATE_STOPWATCH',\n      payload: {\n        id: this.props.values.id,\n        title: this.state.title,\n        project: this.state.project,\n      }\n    });\n  };\n\n  cancelUpdate = (e) => {\n    e.preventDefault();\n    store.dispatch({\n      type:'CANCEL_UPDATE',\n      payload: {\n        id: this.props.values.id\n      }\n    })\n  }\n\n}\n\n\n\nexport default UpdateStopWatch;","import React from 'react';\nimport './App.css';\nimport NewStopWatch from './components/NewStopWatch';\nimport Timer from './components/Timer'\nimport UpdateStopWatch from './components/UpdateStopWatch';\nimport store from './store';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      timers: [{id: 0, title: 'Primer cron√≥metro', project: 'Makeitreal', timerTime: 475003, updateInfo: false }],\n      isAddTimerActive: false,\n    }\n\n    store.subscribe(() => {\n      this.setState({\n        timers: store.getState().timers\n      })\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='header'>Timers</div>\n        {this.state.timers.map((t) => {\n          return (!t.updateInfo ? \n            <div className='frame' key={t.id}>\n              <div className='title'>{t.title}</div>\n              <span className= \"subtitle\">{t.project}</span>\n              <Timer timer={t} key={t.id} />\n            </div> :\n            <div className='frame' key={t.id}>\n              < UpdateStopWatch values={t}  />\n            </div>\n          )\n        }\n        )}\n        {this.state.isAddTimerActive && (\n          <div className='frame'>\n            < NewStopWatch onToggleAddTimer={this.onToggleAddTimer} />\n          </div>\n        )}\n        {!this.state.isAddTimerActive && (\n          <div className=\"add\" onClick={this.onToggleAddTimer}>\n            +\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  onToggleAddTimer = () => {\n    this.setState((state) => ({\n      isAddTimerActive: !state.isAddTimerActive\n    }));\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}